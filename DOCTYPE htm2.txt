<!DOCTYPE html>
<html>
<head><title>Edit Participant</title></head>
<body>
    <h1>Edit Participant</h1>
    <form action="/participant" method="post">
        <input type="hidden" name="_method" value="put" />
        <input type="hidden" name="id" value="${participant.id}" />
        <label for="name">Name:</label>
        <input type="text" id="name" name="name" value="${participant.name}" required />
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" value="${participant.email}" required />
        <button type="submit">Update Participant</button>
    </form>
</body>
</html>

<!DOCTYPE html>
<html>
<head><title>Edit Batch</title></head>
<body>
    <h1>Edit Batch</h1>
    <form action="/batch" method="post">
        <input type="hidden" name="_method" value="put" />
        <input type="hidden" name="id" value="${batch.id}" />
        <label for="batchName">Batch Name:</label>
        <input type="text" id="batchName" name="batchName" value="${batch.batchName}" required />
        <label for="instructor">Instructor:</label>
        <input type="text" id="instructor" name="instructor" value="${batch.instructor}" required />
        <button type="submit">Update Batch</button>
    </form>
</body>
</html>









<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Batch Management</title>
</head>
<body>

    <h1>Batch Management</h1>

    <!-- Form to Add a New Batch -->
    <h2>Create New Batch</h2>
    <form action="BatchServlet" method="post">
        <input type="hidden" name="action" value="create">
        <label for="batchName">Batch Name:</label>
        <input type="text" id="batchName" name="batchName" required>
        <br>
        <label for="instructor">Instructor:</label>
        <input type="text" id="instructor" name="instructor" required>
        <br>
        <button type="submit">Add Batch</button>
    </form>

    <hr>

    <!-- Form to Update an Existing Batch -->
    <h2>Update Batch</h2>
    <form action="BatchServlet" method="post">
        <input type="hidden" name="action" value="update">
        <label for="batchId">Batch ID:</label>
        <input type="number" id="batchId" name="batchId" required>
        <br>
        <label for="batchName">New Batch Name:</label>
        <input type="text" id="batchName" name="batchName" required>
        <br>
        <label for="instructor">New Instructor:</label>
        <input type="text" id="instructor" name="instructor" required>
        <br>
        <button type="submit">Update Batch</button>
    </form>

    <hr>

    <!-- Form to Delete an Existing Batch -->
    <h2>Delete Batch</h2>
    <form action="BatchServlet" method="post">
        <input type="hidden" name="action" value="delete">
        <label for="batchId">Batch ID:</label>
        <input type="number" id="batchId" name="batchId" required>
        <br>
        <button type="submit">Delete Batch</button>
    </form>

    <hr>

    <!-- Form to View All Batches -->
    <h2>View All Batches</h2>
    <form action="BatchServlet" method="get">
        <input type="hidden" name="action" value="





package com.example.database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.SQLException;

public class DatabaseSetup {

    private static final String URL = "jdbc:mysql://localhost:3306/";
    private static final String USER = "root"; 
    private static final String PASSWORD = "password"; 

    public static void main(String[] args) {
        try {
            createDatabase();
            Connection connection = DriverManager.getConnection(URL + "participant_batch_management", USER, PASSWORD);
            createTables(connection);
            System.out.println("Database and tables created successfully.");
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createDatabase() {
        try (Connection connection = DriverManager.getConnection(URL, USER, PASSWORD);
             Statement statement = connection.createStatement()) {

            String createDatabaseSQL = "CREATE DATABASE IF NOT EXISTS participant_batch_management";
            statement.executeUpdate(createDatabaseSQL);
            System.out.println("Database created successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createTables(Connection connection) {
        try (Statement statement = connection.createStatement()) {
            String createParticipantsTableSQL = "CREATE TABLE IF NOT EXISTS participants ("
                    + "id INT AUTO_INCREMENT PRIMARY KEY, "
                    + "name VARCHAR(100) NOT NULL, "
                    + "email VARCHAR(100) NOT NULL UNIQUE"
                    + ")";
            statement.executeUpdate(createParticipantsTableSQL);
            System.out.println("Participants table created successfully.");

            String createBatchesTableSQL = "CREATE TABLE IF NOT EXISTS batches ("
                    + "id INT AUTO_INCREMENT PRIMARY KEY, "
                    + "batchName VARCHAR(100) NOT NULL, "
                    + "instructor VARCHAR(100) NOT NULL"
                    + ")";
            statement.executeUpdate(createBatchesTableSQL);
            System.out.println("Batches table created successfully.");

            String createParticipantBatchesTableSQL = "CREATE TABLE IF NOT EXISTS participant_batches ("
                    + "participant_id INT, "
                    + "batch_id INT, "
                    + "PRIMARY KEY (participant_id, batch_id), "
                    + "FOREIGN KEY (participant_id) REFERENCES participants(id) ON DELETE CASCADE, "
                    + "FOREIGN KEY (batch_id) REFERENCES batches(id) ON DELETE CASCADE"
                    + ")";
            statement.executeUpdate(createParticipantBatchesTableSQL);
            System.out.println("Participant_Batches table created successfully.");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
